CREATE DATABASE My_project;
use My_project;

-- Create Categories table
CREATE TABLE Categories
 (
    CategoryID INT PRIMARY KEY,
    CategoryName VARCHAR(100)
);

-- Create Customers table
CREATE TABLE Customers 
(
    CustomerID INT PRIMARY KEY,
    CustomerName VARCHAR(100),
    Email VARCHAR(100),
    Phone VARCHAR(20),
    City VARCHAR(50)
);

-- Create Products table
CREATE TABLE Products 
(
    ProductID INT PRIMARY KEY,
    ProductName VARCHAR(100),
    CategoryID INT,
    Price DECIMAL(10, 2),
    FOREIGN KEY (CategoryID) REFERENCES Categories(CategoryID)
);

-- Create Sales table
CREATE TABLE Sales 
(
    SaleID INT PRIMARY KEY,
    CustomerID INT,
    ProductID INT,
    SaleDate DATE,
    Quantity INT,
    Total DECIMAL(10, 2),
    FOREIGN KEY (CustomerID) REFERENCES Customers(CustomerID),
    FOREIGN KEY (ProductID) REFERENCES Products(ProductID)
);

-- Insert data into Categories table
INSERT INTO Categories (CategoryID, CategoryName) VALUES
(1, 'Electronics'),
(2, 'Books'),
(3, 'Clothing'),
(4, 'Home & Kitchen');

-- Insert data into Customers table
INSERT INTO Customers (CustomerID, CustomerName, Email, Phone, City) VALUES
(1, 'Vishal Patil', 'vishal.patil@example.com', '9823456789', 'Mumbai'),
(2, 'Sneha Deshmukh', 'sneha.deshmukh@example.com', '9823456790', 'Pune'),
(3, 'Rajesh Shinde', 'rajesh.shinde@example.com', '9823456791', 'Nagpur'),
(4, 'Priya Kulkarni', 'priya.kulkarni@example.com', '9823456792', 'Nashik'),
(5, 'Amit Joshi', 'amit.joshi@example.com', '9823456793', 'Aurangabad');

-- Insert data into Products table
INSERT INTO Products (ProductID, ProductName, CategoryID, Price) VALUES
(1, 'Laptop', 1, 60000.00),
(2, 'Smartphone', 1, 40000.00),
(3, 'Novel', 2, 500.00),
(4, 'T-Shirt', 3, 300.00),
(5, 'Blender', 4, 1500.00);

-- Insert data into Sales table
INSERT INTO Sales (SaleID, CustomerID, ProductID, SaleDate, Quantity, Total) VALUES
(1, 1, 1, '2023-01-15', 1, 60000.00),
(2, 2, 2, '2023-01-16', 2, 80000.00),
(3, 3, 3, '2023-01-17', 1, 500.00),
(4, 4, 4, '2023-01-18', 3, 900.00),
(5, 5, 5, '2023-01-19', 1, 1500.00),
(6, 1, 3, '2023-01-20', 2, 1000.00),
(7, 2, 4, '2023-01-21', 5, 1500.00),
(8, 3, 5, '2023-01-22', 2, 3000.00),
(9, 4, 1, '2023-01-23', 1, 60000.00),
(10, 5, 2, '2023-01-24', 1, 40000.00);


-- 1. What is the total revenue generated from sales for each product category?

Select categories.CategoryName, sum(sales.Total) as Total_Revenue
from Sales join Products on Sales.ProductID = Products.ProductID Join Categories 
on products.CategoryID = categories.CategoryID group by categories.CategoryName;


-- 2. Who are the top 3 customers based on total spending?

Select customers.CustomerName, sum(Sales.Total) as Total_Spent
From Sales join Customers on Sales.CustomerID = Customers.CustomerID
group by Customers.CustomerName order by Total_Spent desc limit 3;


-- 3. What is the total sales revenue for each month?

Select date_format(SaleDate, '%Y-%m') AS Month, sum(Total) as Monthly_Revenue
from Sales group by date_format(SaleDate, '%Y-%m');


-- 4. What is the average price of products within each category?

Select categories.CategoryName, avg(Products.Price) as Average_Price
from Products join Categories on Products.CategoryID = categories.CategoryID
group by categories.CategoryName;


-- 5. Which products have generated the highest revenue on average per sale?

Select Products.ProductName, avg(Sales.Total) as Average_Revenue_Per_Sale
from Sales join Products on Sales.ProductID = Products.ProductID
group by Products.ProductName order by Average_Revenue_Per_Sale desc limit 3;

-- 6. Which customer has purchased the highest quantity of products in total, and what is the total quantity purchased?

Select Customers.CustomerName, sum(sales.Quantity) as Total_Quantity
from Sales join Customers on Sales.CustomerID = Customers.CustomerID
group by Customers.CustomerName
order by Total_Quantity desc limit 1;

-- 7. What is the average spending per customer per category?

Select Customers.CustomerName, Categories.CategoryName, avg(Sales.Total) as Average_Spending
from Sales join Customers on Sales.CustomerID = Customers.CustomerID
join Products on Sales.ProductID = Products.ProductID
join Categories on Products.CategoryID = Categories.CategoryID
group by customers.CustomerName, categories.CategoryName;

-- 8. What is the percentage contribution of each product to the total revenue?

Select Products.ProductName,
(sum(Sales.Total) / (select sum(Total) from Sales) * 100) as Revenue_Percentage
from Sales join Products on sales.ProductID = Products.ProductID
group by Products.ProductName;

-- 9. Identify the customer who made the most purchases in a single month and the corresponding month.

Select Customers.CustomerName, date_format(sales.SaleDate, '%Y-%m') as Month,
count(sales.SaleID) as Purchases
from Sales join Customers on sales.CustomerID = customers.CustomerID
group by customers.CustomerName, Month
order by Purchases desc limit 1;


-- 10. Determine the product category with the highest average order value (AOV).

Select categories.CategoryName, avg(sales.Total) as Average_Order_Value
from Sales join Products on sales.ProductID = products.ProductID
join Categories on products.CategoryID = categories.CategoryID
group by categories.CategoryName order by Average_Order_Value desc limit 1;
